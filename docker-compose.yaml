version: '3.8'
services:
  reps:
    build:
      context: doSomeReps
      dockerfile: /home/z/reps-project/Dockerfile
    networks:
      ng-reps-network:
        ipv4_address: 10.5.0.4
    ports:
      - '5001:5001'
      - '6001:6001'
    environment:
      - FLASK_ENV=development
      - FLASK_APP=wsgi.py
    volumes:
      - ./doSomeReps:/app
    command: flask run --host=0.0.0.0 --port=5001
 
  reps_dev:
    build:
      context: doSomeReps
      dockerfile: /home/z/reps-project/Dockerfile
    networks:
      ng-reps-network:
        ipv4_address: 10.5.0.5
    ports:
      - '5000:5000'
      - '5678:5678'
    environment:
      - FLASK_ENV=development
      - FLASK_APP=wsgi.py
    volumes:
      - ./doSomeReps:/app
    command: python -m debugpy --wait-for-client --listen 0.0.0.0:5678 -m flask run --host=0.0.0.0

  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: ${SQL_SERVER_SA_PASSWORD}
      ACCEPT_EULA: "Y"
    networks:
      ng-reps-network:
        ipv4_address: 10.5.0.16
    ports:
      - "1433:1433"
    volumes:
      - mssql_data:/var/opt/mssql

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      ng-reps-network:
        ipv4_address: 10.5.0.6
    ports:
      - "5432:5432"
    volumes:
      - rep_pg_data:/var/lib/postgresql/data


volumes:
  mssql_data:
    name: "reps-db"
  rep_pg_data:
    name: "rep"

networks:
  ng-reps-network:
    external: true
